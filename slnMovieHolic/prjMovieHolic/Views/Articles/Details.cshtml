@model prjMovieHolic.Models.TArticle

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Styles{

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/css/bootstrap.min.css"
          integrity="sha384-wEmeIV1mKuiNpC+IOBjI7aAzPcEZeedi5yW5f2yOq55WWLwNGmvvx4Um1vskeMj0" crossorigin="anonymous">
    <!-- Bootstrap ICONS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
    <link rel="stylesheet" href="~/css/style.css">
    <link rel="stylesheet" href="~/css/myStyle.css">
    <link href="~/css/EditorJS/editorJS.css" rel="stylesheet" />
    <style>
        .left {
            margin-top: 80px;
        }

        .container {
            width: 880px;
        }
    </style>
}


<div class="container">
    <h6>電影評論 / <a href="/moviefront/moviedetails/@Model.FMovieId">@Model.FMovie.FNameCht</a></h6>
    <div class="myBr"></div>
    <h3>@Html.DisplayFor(model => model.FTitle)</h3>
    <div class="row" style=" display:flex">
        <h6 class="col-md-6">作者：@Html.DisplayFor(model=>model.FMember.FName)</h6>
        <h6 class="col-md-6">電影評分：@Html.DisplayFor(model => model.FScore)</h6>
    </div>
    <h6 style="color:gray">發表於：@Html.DisplayFor(model => model.FTimeCreated)</h6>
</div>
<hr />
<div class="editorJS">
    <div id="editorjs"></div>
</div>



@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/@@editorjs/editorjs@@latest"></script>
    <script src="https://cdn.jsdelivr.net/npm/@@editorjs/image@@2.6.0"></script>
    <script src="https://cdn.jsdelivr.net/npm/@@editorjs/header@@latest"></script>
    <script>
        var blockContent = @Html.Raw(Model.FBlockJson);
        console.log(blockContent);
        const editor = new EditorJS({
            readOnly: true,
            data: blockContent,
            tools: {
                header: {
                    class: Header,
                    inlineToolbar: true
                },
                image: {
                    class: ImageTool,
                    config: {
                        endpoints: {
                            byFile: '../api/ImageUploader/upload-image', // Your backend file uploader endpoint
                            byUrl: '../api/ImageUploader/fetchUrl', // Your endpoint that provides uploading by Url
                        }
                    }
                }
            }
        });


    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
