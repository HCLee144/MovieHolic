@model prjMovieHolic.ViewModels.COrderAndMemberViewModel
@{
    ViewData["Title"] = "MovieHolic會員專區";
}

@section Styles{
    <style>
        .h3Text {
            text-align: left;
            font-size:36px;
            margin:10px;
            margin-bottom:20px;
            margin-left:70px
        }

        .headText {
            font-weight: bold;
            text-align: center;
        }

        .tdWidth th {
            width: 30px;
        }

        .tdText td {
            text-align: center;
            font-size:24px;
            line-height:30px
        }

        .tdWidth td {
            width: 70px;
        }

        .borderWidth {
            width: 700px;
            margin: auto;
            border-collapse: collapse;
        }

        .tBodyBorder tr {
            border-bottom: 1px solid gray;
        }

        .tHeadBorder tr {
            border-bottom: 2px solid black;
        }

        tbody tr:nth-child(2n) {
            background-color: gainsboro;
        }


        .IamDialog {
            width: 850px;
            height: 400px;
            border-radius: 15px;
            margin: 250px auto;
            padding:30px
        }

            .IamDialog p {
                color: #999;
                font-size: 24px;
                margin-top: 30px;
                text-align: center;
            }

            .IamDialog::-webkit-scrollbar {
                background: transparent;
                width: 6px;
                height: 6px;
                border-radius: 5px;
            }

            .IamDialog::-webkit-scrollbar-thumb {
                background-color: silver;
                border-radius: 5px;
            }

        .closeDialog {
            border-radius: 5px;
            color: azure;
            width: 100px;
            height: 40px;
            background-color: #10a5d6;
            margin-top: 30px;
            margin-left: 190px;
        }

        .closeOrderDetailsDialog {
            border-radius: 5px;
            color: azure;
            width: 100px;
            height: 40px;
            background-color: #10a5d6;
            margin-top: 30px;
        }

        .noBookOrderParagraph{
            font-size:28px;
            text-align:center;
            color:grey;
        }

        .toMovieIndexLink {
            text-align: center;
            display:block;
            font-size:28px;
            text-decoration: underline;
            color:grey;
        }

        .toMovieIndexLink:link{
            text-align:center;
            text-decoration:underline;
        }

        .toMovieIndexLink:hover {
            color: blue;
            cursor:pointer;
        }


        .dialogDiv {
            font-size: 24px;
            text-align: left;
            color: black;
            line-height: 28px
        }


            .dialogDiv h3 {
                font-size: 30px;
                text-align: left;
                color: black;
                margin-top: 20px;
                margin-bottom: 20px
            }

            .dialogDiv h4 {
                font-size: 26px;
                text-align: left;
                color: black;
                margin-top: 10px;
                margin-bottom: 10px
            }
    </style>
}

<div id="page2">
    <div class="body1">
        <div class="body3">
            <div class="main">
                <!-- content -->
                <section id="content">
                    <div class="line1 wrapper">
                        <div class="wrapper tabs memCut">
                            <article class="memberMenu">
                                <h3 class="welcome">歡迎，@Model.Member.FName</h3>
                                <hr />
                                <div class="pad">
                                    <ul class="nav">
                                        <li>@Html.ActionLink("會員資料", "memberList","memberFront",new {id=Model.Member.FMemberId},null)</li>
                                        <li>@Html.ActionLink("資料修改", "memberEdit","memberFront",new { id=Model.Member.FMemberId },null)</li>
                                        <li>@Html.ActionLink("更改密碼", "passwordEdit","memberFront",new { id=Model.Member.FMemberId },null)</li>
                                        <li class="selected"><a>訂單查詢</a></li>
                                        <li>
                                            @Html.ActionLink("我的收藏（"+$"{Model.MemberActionNow.Count}"+"）", "favoriteList","memberFront",new { id=Model.Member.FMemberId },null)
                                        </li>
                                        <li>@Html.ActionLink("我的優惠券（"+$"{Model.CouponList.Count}"+"）", "couponList","memberFront",new { id=Model.Member.FMemberId },null)</li>
                                        <li>@Html.ActionLink("我的評論", "commentList","memberFront",new { id=Model.Member.FMemberId },null)</li>
                                        <li>@Html.ActionLink("登出", "memberLogout","memberFront",null,new{onclick="return confirm('確認要登出嗎?')"})</li>
                                    </ul>
                                </div>
                            </article>


                            <div class="orderList">
                                <div class="momberPageTitle"><h3>訂單查詢</h3></div>
                                <div class="tabPlace">
                                    <!-- TAB1 打包區塊 start -->
                                    <input id="tab1" type="radio" name="tab" checked="checked" />
                                    <label id="OrderBook" for="tab1">未取票</label>
                                    <div class="tab_content overflowXHidden overflowYHidden">
                                        <div class="orderLa" id="divBook">
                                            <p class="noBookOrderParagraph">尚無未取票訂單，有想看的電影嗎 ?</p>
                                            @Html.ActionLink("點我看現正熱映電影","MovieIndex","MovieFront",null,new{@class="toMovieIndexLink"})
                                        </div>
                                    </div>
                                    <!-- TAB1 打包區塊 end -->
                                    <!-- TAB2 打包區塊 start -->
                                    <input id="tab2" type="radio" name="tab" />
                                    <label id="OrderGet" for="tab2">已取票</label>
                                    <div class="tab_content overflowXHidden overflowYHidden">
                                        <div class="orderLa" id="divGet">
                                        </div>
                                    </div>
                                    <!-- TAB2 打包區塊 end -->
                                    <!-- TAB3 打包區塊 start -->
                                    <input id="tab3" type="radio" name="tab" />
                                    <label for="tab3" id="OrderCancel">已取消</label>
                                    <div class="tab_content overflowXHidden overflowYHidden">
                                        <div class="orderLa" id="divCancel">
                                        </div>
                                    </div>
                                    <!-- TAB3 打包區塊 end -->
                                </div>

                            </div>
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>
</div>

<dialog id="IamDialog" class="IamDialog">
    <h3 class="h3Text">訂票明細</h3>
    <table class="tdWidth tdText borderWidth">
        <thead class="headText tHeadBorder">
            <tr>
                <td>序號</td>
                <td>座位</td>
                <td>票種</td>
            </tr>
        </thead>
        <tbody id="dialogBody" class="tBodyBorder">
        </tbody>
    </table>
    <br /><br />
    <h3 class="h3Text">餐點明細</h3>
    <table class="tdWidth tdText borderWidth">
        <tbody id="dialogFoodBody">
        </tbody>
    </table>
    <div style="display:flex;justify-content:center">
        <button id="closeDialog" class="closeOrderDetailsDialog">確認</button>
    </div>
</dialog>

<dialog id="cancelDialog" class="IamDialog">
    <div id="cancelParagraph" class="dialogDiv">
        <h3>退票費用</h3>
        根據我們的退票政策，可能會收取一定的退票費用或手續費。請確認您的退票費用及相關政策。
        <br />
        <h4>票券狀態</h4>
        請注意，只有未使用過的票券才能辦理退票。如果您已經使用了票券進場觀影，將無法退還票款。
        <br />
        <h4>退款處理時間</h4>
        一旦您成功提交退票申請，我們將在 3天 內進行退款處理。請耐心等待，退款款項將原路返回到您使用的付款方式上。
        <br />
        <h4>退票方式</h4>
        您可以選擇在線退票或聯繫客服進行退票申請。請按照指示提供相關信息和完成退票程序。
        <br />
        <h4>退票確認</h4>
        一旦您成功提交退票申請，請保留相關退票確認資訊作為您的記錄。我們也會通過郵件或其他方式向您發送退票確認。
        <br />
        <h4>退票聯繫</h4>
        如果您在退票過程中遇到困難或有任何疑問，請隨時聯繫我們的客服部門，我們的團隊將樂意為您提供支援和協助。
        <br /><br />
        <h4>確定要退票嗎？</h4>
    </div>
    <button id="confirmDialog" class="closeDialog">確定</button>
    <button id="closeCancelDialog" class="closeDialog">取消</button>
</dialog>

@section Scripts{
    <script>
        const OrderBook = document.getElementById('OrderBook');
        const OrderGet = document.getElementById('OrderGet');
        const OrderCancel = document.getElementById('OrderCancel');
        const divBook = document.getElementById('divBook');
        const divGet = document.getElementById('divGet');
        const divCancel = document.getElementById('divCancel');

        const formdialog = document.getElementById('IamDialog');
        const btnCloseDialog = document.getElementById('closeDialog');
        const dialogBody = document.getElementById('dialogBody');
        const dialogFoodBody = document.getElementById('dialogFoodBody');

        const cancelDialog = document.getElementById('cancelDialog');
        const cancelParagraph = document.getElementById('cancelParagraph');
        const confirmDialog = document.getElementById('confirmDialog');
        const closeCancelDialog = document.getElementById('closeCancelDialog');


        window.onload = async () => {
            const result= await ListOrderBookTicket('未取票');
            if(result)
                divBook.innerHTML = result;
            else{
                divBook.innerHTML = ' <p class="noBookOrderParagraph">尚無未取票訂單，有想看的電影嗎 ?</p>';
                divBook.innerHTML += '@Html.ActionLink("點我看現正熱映電影","MovieIndex","MovieFront",null,new{@class="toMovieIndexLink"})';
            } 
        }

        OrderBook.addEventListener('click', async () => {
            result = await ListOrderBookTicket('未取票');
            if(result)
                divBook.innerHTML = result;
            else{
                divBook.innerHTML = ' <p class="noBookOrderParagraph">尚無未取票訂單，有想看的電影嗎 ?</p>';
                divBook.innerHTML += '@Html.ActionLink("點我看現正熱映電影","MovieIndex","MovieFront",null,new{@class="toMovieIndexLink"})';
            }
        });
        OrderGet.addEventListener('click', async () => {
            result = await ListOrderTicket('已取票');
            divGet.innerHTML = result;
        });
        OrderCancel.addEventListener('click', async () => {
            result = await ListCancelTicket('已取消');
            divCancel.innerHTML = result;
        });

        //未取票
        async function ListOrderBookTicket(od) {
            const response = await fetch('@Url.Content("~/OrderFront/ListOrderBook")?orderStatusDescribe=' + od);
            const data = await response.json();
            let result = '';
            data.forEach((item) => {
                result += `<div class="addBorder"><div class="orderDetailBox"><div class="orderDetailBoxTop"><div>`;
                result += `<h3>${item["theaterName"]}</h3><h4>${item["movieName"]}</h4>`;
                result += `</div><div><a id=${item["orderID"]} onclick="showOrderDetails(event)" >詳情</a>`;
                result += `<button id=${item["orderID"]} class="orderDetaildelete" onclick="cancelTicket(event)">取消</button></div></div><div class="orderDetailBoxBottom">`;
                result += `<h3>${item["sessionStartTime"]}</h3><h3>NT$ ${item["totalPrice"]}元</h3>`;
                result += `</div></div></div>`
            })
            return result;
        }

        //已取票
        async function ListOrderTicket(od) {
            const response = await fetch('@Url.Content("~/OrderFront/ListOrderBook")?orderStatusDescribe=' + od);
            const data = await response.json();
            let result = '';
            data.forEach((item) => {
                result += `<div class="addBorder"><div class="orderDetailBox"><div class="orderDetailBoxTop"><div>`;
                result += `<h3>${item["theaterName"]}</h3><h4>${item["movieName"]}</h4>`;
                result += `</div><div><h3><a id=${item["orderID"]} onclick="showOrderDetails(event)" >詳情</a></h3></div></div>`;
                result += `<div class="orderDetailBoxBottom">`;
                result += `<h3>${item["sessionStartTime"]}</h3><h3>NT$ ${item["totalPrice"]}元</h3>`;
                result += `</div></div></div>`
            })
            return result;
        }

        //已取消
        async function ListCancelTicket(od) {
            const response = await fetch('@Url.Content("~/OrderFront/ListOrderBook")?orderStatusDescribe=' + od);
            const data = await response.json();
            console.log(data);
            let result = '';
            data.forEach((item) => {
                result += `<div class="addBorder"><div class="orderDetailBox"><div class="orderDetailBoxTop"><div>`;
                result += `<h3>${item["theaterName"]}</h3><h4>${item["movieName"]}</h4>`;
                result += `</div><div></div></div>`;
                result += `<div class="orderDetailBoxBottom">`;
                result += `<h3>${item["sessionStartTime"]}</h3><h3>NT$ ${item["totalPrice"]}元</h3>`;
                result += `</div></div></div>`
            })
            console.log(result);
            return result;
        }

        async function showOrderDetails(event) {
            const id = event.target.getAttribute('id');
            const orderDetaildata = await callOrderDetail(id);
            const receiptDetaildata = await callReceiptDetail(id);

            dialogBody.innerHTML = orderDetaildata;
            dialogFoodBody.innerHTML = receiptDetaildata;
            formdialog.showModal();
            btnCloseDialog.addEventListener('click', () => {
                formdialog.close();
            })

        }

        async function callOrderDetail(orderID) {
            const response = await fetch('@Url.Content("~/OrderFront/ShowOrderDetails")?orderID=' + orderID);
            const data = await response.json();

            let result = '';
            let i = 1;
            data.forEach((item) => {
                result += `<tr><td>${i}</td>`;
                result += `<td>${item["seatName"]}</td>`;
                result += `<td>${item["ticketClassName"]}</td></tr>`;
                i++;
            })

            return result;
        }
        async function callReceiptDetail(orderID) {
            const response = await fetch('@Url.Content("~/OrderFront/ShowReceiptDetails")?orderID=' + orderID);
            const data = await response.json();

            let result = `<td style="text-align: left">`;
            data.forEach((item) => {
                result += `${item["productName"]}x${item["productCount"]}、`;
            })
            if (result.substring(result.length - 1) == '、')
                result = result.substring(0, result.length - 1);
            result += `</td>`
            console.log(result);

            return result;
        }

        function cancelTicket(event) {
            cancelDialog.showModal();
            confirmDialog.addEventListener('click', async () => {
                const orderID = event.target.getAttribute('id');
                const response = await deleteOrder(orderID);

                const result = await ListOrderBookTicket('未取票');
                divBook.innerHTML = result;

                cancelDialog.close();
            })
            closeCancelDialog.addEventListener('click', () => {
                cancelDialog.close();
            })
        }

        async function deleteOrder(orderID) {
            const response = await fetch('@Url.Content("~/OrderFront/deleteOrder")?orderID=' + orderID);
            const data = await response.text();
            if (data == 'Success')
                return '退票成功';
        }
    </script>
}
