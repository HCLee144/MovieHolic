@model prjMovieHolic.ViewModels.COrderAndMemberViewModel
@{
    ViewData["Title"] = "orderList";
}

<div id="page2">
    <div class="body1">
        <div class="body3">
            <div class="main">
                <!-- content -->
                <section id="content">
                    <div class="line1 wrapper">
                        <div class="wrapper tabs memCut">
                            <article class="memberMenu">
                                <h3 style="font-size:20px">歡迎，@Model.Member.FName</h3>
                                <hr />
                                <div class="pad">
                                    <ul class="nav">
                                        <li>@Html.ActionLink("會員資料", "memberList","memberFront",new {id=Model.Member.FMemberId},null)</li>
                                        <li>@Html.ActionLink("資料修改", "memberEdit","memberFront",new { id=Model.Member.FMemberId },null)</li>
                                        <li>@Html.ActionLink("更改密碼", "passwordEdit","memberFront",new { id=Model.Member.FMemberId },null)</li>
                                        <li><a class="selected">訂單查詢</a></li>
                                        <li>@Html.ActionLink("我的收藏", "favoriteList","memberFront",new { id=Model.Member.FMemberId },null)</li>
                                        <li>@Html.ActionLink("我的優惠券", "couponList","memberFront",new { id=Model.Member.FMemberId },null)</li>
                                        <li><a href="#Advertising">我的評論</a></li>
                                        <li>@Html.ActionLink("登出", "memberLogout","memberFront",null,new{onclick="return confirm('確認要登出嗎?')"})</li>
                                    </ul>
                                </div>
                            </article>


                            <div class="orderList">
                                <div class="tabPlace">
                                    <!-- TAB1 打包區塊 start -->
                                    <input id="tab1" type="radio" name="tab" checked="checked" />
                                    <label id="OrderBook" for="tab1">未取票</label>
                                    <div class="tab_content">
                                        <div class="orderLa" id="divBook">
                                 
                                        </div>
                                    </div>
                                    <!-- TAB1 打包區塊 end -->
                                    <!-- TAB2 打包區塊 start -->
                                    <input id="tab2" type="radio" name="tab" />
                                    <label id="OrderGet" for="tab2">已取票</label>
                                    <div class="tab_content">
                                        <div class="orderLa" id="divGet">
                                            
                                       
                                        </div>
                                    </div>
                                    <!-- TAB2 打包區塊 end -->
                                    <!-- TAB3 打包區塊 start -->
                                    <input id="tab3" type="radio" name="tab" />
                                    <label for="tab3" id="OrderCancel">已取消</label>
                                    <div class="tab_content">
                                        <div class="orderLa" id="divCancel">
                                            
                                        </div>
                                    </div>
                                    <!-- TAB3 打包區塊 end -->
                                </div>

                            </div>
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>
</div>

<dialog id="IamDialog" class="IamDialog">
    <table>
        <thead>
            <tr>
                <td>座位</td>
                <td>票種</td>
            </tr>
        </thead>
        <tbody id="dialogBody">
        </tbody>
    </table>
    <button id="closeDialog"  class="closeDialog">確認</button>
</dialog>

@section Scripts{
    <script>
        const OrderBook=document.getElementById('OrderBook');
        const OrderGet=document.getElementById('OrderGet');
        const OrderCancel=document.getElementById('OrderCancel');
        const divBook=document.getElementById('divBook');
        const divGet=document.getElementById('divGet');
        const divCancel=document.getElementById('divCancel');

        const formdialog = document.getElementById('IamDialog');
        const btnCloseDialog = document.getElementById('closeDialog');
        const dialogBody=document.getElementById('dialogBody');

        window.onload = async ()=> {
            divBook.innerHTML=await ListOrderTicket('未取票');
        }
 
        OrderBook.addEventListener('click',async ()=>{
            result=await ListOrderTicket('未取票');
             divBook.innerHTML=result;
        });
        OrderGet.addEventListener('click',async ()=>{
            result=await ListOrderTicket('已取票');
             divGet.innerHTML=result;
        });
        OrderCancel.addEventListener('click',async ()=>{
            result=await ListOrderTicket('已取消');
             divCancel.innerHTML=result;
        });
      

        async function ListOrderTicket(od)
        {
            const response = await fetch('@Url.Content("~/OrderFront/ListOrderBook")?orderStatusDescribe='+od);
            const data = await response.json();
            console.log(data);
            let result='';
            data.forEach((item)=>{
                result+=`<div class="addBorder"><div class="orderDetailBox"><div class="orderDetailBoxTop"><div>`;
                result+=`<h3>${item["theaterName"]}</h3><h4>${item["movieName"]}</h4>`;
                result+=`</div><div><h3><a id=${item["orderID"]} onclick="showOrderDetails(event)" >詳情</a></h3></div></div><div class="orderDetailBoxBottom">`;
                result+=`<h3>${item["sessionStartTime"]}</h3><h3>${item["totalPrice"]}</h3>`;
                result+=`</div></div></div>`        
            })
            console.log(result);
            return result;
        }

        async function showOrderDetails(event)
        {
            const id=event.target.getAttribute('id');
            const data=await callOrderDetail(id);
            
            dialogBody.innerHTML=data;
            formdialog.showModal();
            btnCloseDialog.addEventListener('click', () => {
            formdialog.close();
            })
            
            console.log(id);
        }

        async function callOrderDetail(orderID)
        {
            const response=await fetch('@Url.Content("~/OrderFront/ShowOrderDetails")?orderID='+orderID);
            const data=await response.json();
            console.log(data);

            let result='';
            data.forEach((item)=>{
                result+=`<tr><td>${item["seatName"]}</td>`;   
                result+=`<td>${item["ticketClassName"]}</td></tr>`;  
            })
            console.log(result);

            return result;
        }
    </script>
}
