@model prjMovieHolic.ViewModels.CMemberAndOtherViewModel
@{
    ViewData["Title"] = "passwordEdit";
}

<div id="page2">
    <div class="body1">
        <div class="body3">
            <div class="main">
                <!-- content -->
                <section id="content">
                    <div class="line1 wrapper">
                        <div class="wrapper tabs memCut">
                            <article class="memberMenu">
                                <h3 class="welcome">歡迎，@Model.Member.FName</h3>
                                <hr />
                                <div class="pad">
                                    <ul class="nav">
                                        <li>@Html.ActionLink("會員資料", "memberList","memberFront",new { id=Model.Member.FMemberId },null)</li>
                                        <li>@Html.ActionLink("資料修改", "memberEdit","memberFront",new { id=Model.Member.FMemberId },null)</li>
                                        <li class="selected"><a>更改密碼</a></li>
                                        <li>@Html.ActionLink("訂單查詢", "orderList","memberFront",new { id=Model.Member.FMemberId },null)</li>
                                        <li>@Html.ActionLink("我的收藏（"+$"{Model.MemberActionNow.Count}"+"）", "favoriteList","memberFront",new { id=Model.Member.FMemberId },null)</li>
                                        <li>@Html.ActionLink("我的優惠券（"+$"{Model.CouponList.Count}"+"）", "couponList","memberFront",new { id=Model.Member.FMemberId },null)</li>
                                        <li>@Html.ActionLink("我的評論", "commentList","memberFront",new { id=Model.Member.FMemberId },null)</li>
                                        <li>@Html.ActionLink("登出", "memberLogout","memberFront",null,new{onclick="return confirm('確認要登出嗎?')"})</li>
                                    </ul>
                                </div>
                            </article>
                            <div class="memberInformation">
                                <div class="momberPageTitle"><h3>更改密碼</h3></div>
                                <div class="MemberPasswordChangeform">
                                    <form asp-action="passwordEdit" method="post" id="yourForm">
                                        <input type="hidden" value="@Model.Member.FMemberId" name="FMemberId" />
                                        <p>密碼：<input type="password" name="txtPreviousFPassword" id="txtPreviousFPassword" required></p>
                                        <p id="passwordCheck"></p>
                                        <p>新設密碼：<input type="password" name="txtNewFPassword" id="txtNewFPassword" required></p>
                                        <p id="passwordFormat"></p>
                                        <p>密碼確認：<input type="password" name="txtNewFPasswordCheck" id="txtNewFPasswordCheck" required></p>
                                        <p id="passwordDoubleCheck"></p>
                                    <br>
                                        <div class="MemberEditSubmit">
                                            <input class="ourButton" type="submit" id="submit" value="送出">
                                            <a href="@Url.Action("memberList","memberFront",new{id=Model.Member.FMemberId})"><input class="ourButton" type="button" id="cancel" value="取消"></a>
                                            <input class="ourButton" type="button" id="Demo" value="Demo">
                                            </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>
</div>

<dialog id="IamDialog" class="IamDialog">
    <p>修改密碼成功！</p>
    <button id="closeDialog" class="closeDialog">確認</button>
</dialog>
<dialog id="IamDialogFail" class="IamDialog">
    <p>密碼修改失敗，請重新輸入。</p>
    <button id="closeDialogFail" class="closeDialog">確認</button>
</dialog>

@section Scripts{
    <script>
        const previousPassword = document.querySelector('#txtPreviousFPassword');
        const passwordCheck = document.querySelector('#passwordCheck');
        const newPassword = document.querySelector('#txtNewFPassword');
        const passwordFormat = document.querySelector('#passwordFormat');
        const newPasswordCheck = document.querySelector('#txtNewFPasswordCheck');
        const passwordDoubleCheck = document.querySelector('#passwordDoubleCheck');
        const submit=document.querySelector('#submit');
        const Demo=document.querySelector('#Demo');

        previousPassword.addEventListener('blur', async () => {
            //判斷密碼是否符合
            const response = await fetch(`@Url.Content("~/memberFront/passwordCheck")?previousPassword=` + previousPassword.value,{method:"POST"});
            const data = await response.text();
            
            let message = '密碼錯誤';
            if (data === "True") {
                message = ''
            }
            passwordCheck.innerHTML = message;
        })
        newPassword.addEventListener('blur', async () => {
            // 新密碼格式驗證
            const response = await fetch(`@Url.Content("~/memberFront/passwordFormat")?newPassword=` + newPassword.value,{method:"POST"});
            const data = await response.text();
            
            let message = '請輸入8碼 ~16碼的密碼，密碼必須含大小寫英文字母及數字';
            if (data === "True") {
                message = ''
            }
            passwordFormat.innerHTML = message;
        })
        newPasswordCheck.addEventListener('blur', async () => {
            // 新密碼反覆確認
            const response = await fetch(`@Url.Content("~/memberFront/passwordDoubleCheck")?newPassword=` + newPassword.value + '&newPasswordCheck=' + newPasswordCheck.value,{method:"POST"});
            const data = await response.text();
            console.log(data);
            let message = '請確認您的新密碼是否正確';
            if (data === "True") {
                message = ''
            }
            passwordDoubleCheck.innerHTML=message;
        })

        const formdialog = document.getElementById('IamDialog');
        const btnCloseDialog = document.getElementById('closeDialog');
        const formdialogFail = document.getElementById('IamDialogFail');
        const btnCloseDialogFail = document.getElementById('closeDialogFail');

        submit.addEventListener('click', async (event) => {
            event.preventDefault();
            const response = await fetch(`@Url.Content("~/memberFront/IsPasswordEdit")?previousPassword=` +
                previousPassword.value + "&newPassword=" + newPassword.value + "&newPasswordCheck=" + newPasswordCheck.value, { method: 'POST' })
            const data = await response.json();
            console.log(data)
            if (data.success) {
                // 成功寄送新密碼，顯示提示訊息                
                formdialog.showModal();

            } else {
                // 無法寄送新密碼，顯示錯誤訊息
                formdialogFail.showModal();
                btnCloseDialogFail.addEventListener('click', () => {
                    formdialogFail.close();
                    window.location.reload();
                })
            }
        })

        btnCloseDialog.addEventListener('click', async () => {
            // 提交表單資料到 Controller
            const form = document.querySelector('#yourForm');
            const formData = new FormData(form);

            const response = await fetch('@Url.Content("~/memberFront/PasswordEdit")', {
                method: 'POST',
                // 設定適當的 headers 和 body，包含需要傳遞的資料
                body: formData,
            });
            // 關閉 <dialog>
            formdialog.close();
            window.location.href = "/memberFront/memberList?id=" + @Model.Member.FMemberId;
            
        });

        

        Demo.addEventListener('click',function(){
            previousPassword.value = 'Xpe49cFb';
            newPassword.value = '8M43Td24';
            newPasswordCheck.value = '8M43Td24';

        })

    </script>
}
